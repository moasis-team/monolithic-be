plugins {
        id 'java'
        id 'org.springframework.boot' version '3.0.1'
        id 'io.spring.dependency-management' version '1.1.0'
        id 'com.palantir.docker' version '0.34.0'
        id 'com.palantir.docker-run' version '0.34.0'
}

group = 'site.moasis'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
}

repositories {
        mavenCentral()
}

dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'com.google.guava:guava:28.2-jre'
        implementation 'org.apache.commons:commons-lang3:3.9'
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        implementation 'org.springframework.security:spring-security-oauth2-core:5.7.3'
        implementation 'org.springframework.security:spring-security-oauth2-client'
        implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
  
        // testImplementation 'org.springframework.security:spring-security-test'

        // DB
        runtimeOnly 'com.h2database:h2'
        implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.0'
        implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// for StringUtils
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-text:1.9'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'

        // MapStruct
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
        implementation 'org.mapstruct:mapstruct:1.4.2.Final'
}

tasks.named('test') {
        useJUnitPlatform()
}

jar {
        enabled = false
}

String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'chung1306'
String imageName = "${dockerHubUsernameProperty}/monolithic-be:$version"

docker {
        name imageName
        files "build/libs/${bootJar.archiveFileName.get()}"
        buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
        name project.name
        image imageName
        ports '8080:8080'
        clean true
        daemonize true
        arguments '--network=monolithic-be_moasis-net'
}